using System;
using System.Drawing;
using System.Windows.Forms;

namespace tictak
{
    partial class Form1 : Form
    {
        private GameLogic game;
        int dx = 10;
        int dy = 50;
        public bool gamer;


        public Form1()
        {
            InitializeComponent();
            game = new GameLogic();
            Init();
        }

        private void Init()
        {
            Paint += GraphInit;

            Paint += Build;
            new Button {Parent = this, Top = 450, Left = 130, Text = "Новая игра"}.Click += delegate
            {
                game = new GameLogic();
                this.Invalidate();
            };
        }

        private void GraphInit(object sender, PaintEventArgs e)
        {
            Graphics g = e.Graphics;
            g.TranslateTransform(dx, dy);
        }


        private void Build(object sender, PaintEventArgs e)
        {
            Graphics g = e.Graphics;
            g.Clear(Color.Linen);
            g.DrawLine(new Pen(Color.Crimson, 2.0f), 0, 0, 300, 0);
            g.DrawLine(new Pen(Color.Crimson, 2.0f), 0, 0, 0, 300);
            g.DrawLine(new Pen(Color.Crimson, 2.0f), 100, 0, 100, 300);
            g.DrawLine(new Pen(Color.Crimson, 2.0f), 200, 0, 200, 300);
            g.DrawLine(new Pen(Color.Crimson, 2.0f), 300, 0, 300, 300);
            g.DrawLine(new Pen(Color.Crimson, 2.0f), 0, 100, 300, 100);
            g.DrawLine(new Pen(Color.Crimson, 2.0f), 0, 200, 300, 200); ;
            g.DrawLine(new Pen(Color.Crimson, 2.0f), 0, 300, 300, 300);
        }

        private void Form1_MouseClick(object sender, MouseEventArgs e)
        {
            Graphics g = this.CreateGraphics();
            g.TranslateTransform(dx, dy);
            int x = e.X - dx;
            int y = e.Y - dy;
            if (game.Winned)
                MessageBox.Show(String.Format("Press Reset!"));
            if(game.Winned)
                return;


            for (int i = 1; i < 4; i++)
            {
                
                for (int j = 1; j < 4; j++)
                {
                   
                    if (x > i * 100 - 100 && x < i * 100 && y > j * 100 - 100 && y < j * 100 &&
                        game.Items[i - 1, j - 1] == FieldStatus.Empty)
                    {
                        
                        if (gamer == false)
                        {
                            g.DrawLine(new Pen(Color.Black, 2.0f), i * 100 - 100, j * 100 - 100, i * 100, j * 100);
                            g.DrawLine(new Pen(Color.Black, 2.0f), i * 100 - 100, j * 100, i * 100, j * 100 - 100);

                            gamer = !gamer;
                        }
                        else
                        {
                            g.DrawEllipse(new Pen(Color.Red, 2.0f), i * 100 - 100, j * 100 - 100, 100, 100);

                            gamer = !gamer;
                        }

                        game.Move(i - 1, j - 1);
                    }
                }
            }

            if (game.Draw)
            {
                
                MessageBox.Show(string.Format("It's a Draw!"));
                return;
            }

            if (game.Winned)
            {
                
                MessageBox.Show(string.Format("{0} is winner!", gamer ? "Cross" : "Nougth"));
                
                if (gamer == true)
                {
                    label3.Text = (int.Parse(label3.Text) + 1).ToString();
                }
                else
                {
                    label4.Text = (int.Parse(label4.Text) + 1).ToString();
                }
                return;
            }
                
            
        }

        private void Form1_Load(object sender, EventArgs e)
        {

        }

        private void label1_Click(object sender, EventArgs e)
        {

        }

        
    }

    class GameLogic

    {
        public bool Draw;
        public bool Winned;
        public FieldStatus[,] Items = new FieldStatus[3, 3];
        private bool gamer;
        private int count;


        public void Move(int x, int y)
        {
            if (Items[x, y] != FieldStatus.Empty)
                return;
            Items[x, y] = gamer ? FieldStatus.Cross : FieldStatus.Nought;
            count += 1;
            if (count == 9)
            {
                Draw = true;
                return;
            }

            if (CheckWinner(FieldStatus.Cross) || CheckWinner(FieldStatus.Nought))
            {
                Winned = true;
                return;
            }

            gamer = !gamer;
        }


        public bool CheckWinner(FieldStatus state)
        {
            for (int i = 0; i < 3; i++)
            {
                if (Items[i, 0] == state && Items[i, 1] == state && Items[i, 2] == state)
                    return true;
                if (Items[0, i] == state && Items[1, i] == state && Items[2, i] == state)
                    return true;
            }

            if (Items[0, 0] == state && Items[1, 1] == state && Items[2, 2] == state)
                return true;

            if (Items[0, 2] == state && Items[1, 1] == state && Items[2, 0] == state)
                return true;

            return false;
        }

        private void Line(object sender, PaintEventArgs e, int a)
        {
            for (int i = 0; i < 7; i++)
            {
                if (i == a - 1)
                {
                    Graphics g = e.Graphics;
                    g.DrawLine(new Pen(Color.Crimson, 3.0f),0,50,300,50 );
                }
            }
        }
    }
}

enum FieldStatus
{
    Empty,
    Cross,
    Nought,
}
